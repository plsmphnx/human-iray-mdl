mdl 1.4;

using df import *;
using math import *;

export float normal_from_ior(
    float ior,
    float ior_0 = 1.0
) uniform {
    return ((ior - ior_0)*(ior - ior_0))/((ior + ior_0)*(ior + ior_0));
}

export color calculate_sss_albedo(
    color absorption_coefficient,
    color scattering_coefficient,
    float anisotropy = 0.0,
    color ior = color(1.0)
) uniform {
    /* reduced volume albedo */
    color reduced_scattering_coefficient = scattering_coefficient*(1.0 - anisotropy);
    color a = reduced_scattering_coefficient/(reduced_scattering_coefficient + absorption_coefficient);
    
    /* reï¬‚ection parameter */
    /* http://www.eugenedeon.com/project/qd/ */
    color c1x2 = -9.23372
        + ior*(22.2272 + ior*(-20.9292 + ior*(10.2291 + ior*(-2.54396 + ior*(0.254913)))));
    color c2x3 = -1641.1
        + (((135.926)/ior + -656.175)/ior + 1376.53)/ior
        + ior*(1213.67 + ior*(-568.556 + ior*(164.798 + ior*(-27.0181 + ior*(1.91826)))));
    color A = (1 + c2x3)/(1 - c1x2);
    
    /* surface albedo */
    /* http://graphics.ucsd.edu/~henrik/papers/fast_bssrdf/fast_bssrdf.pdf */
    color f = exp(-sqrt(3*(1 - a)));
    return (a/2)*(1 + pow(f, 4*A/3))*f;
}

export material thin_layer_sss(
    color surface_color = color(1.0),
    uniform color absorption_coefficient = color(0.0),
    uniform color scattering_coefficient = color(0.0),
    uniform float anisotropy = 0.0,
    uniform color ior = color(1.0)
) = let {
    uniform color albedo = calculate_sss_albedo(absorption_coefficient, scattering_coefficient, anisotropy, ior);
} in material(
    ior: ior,
    surface: material_surface(
        scattering: color_weighted_layer(
            /* surface_color > albedo */
            /* surface_color = weight + (1 - weight)*albedo*((1 - weight) + weight*albedo*(...)) */
            weight: saturate(surface_color - albedo)/((1.0 - albedo) - albedo*(1.0 - surface_color)),
            layer: diffuse_reflection_bsdf(),
            base: diffuse_transmission_bsdf(
                /* surface_color < albedo */
                /* surface_color = albedo * tint^2 */
                tint: sqrt(saturate(surface_color/albedo))
            )
        )
    ),
    volume: material_volume(
        scattering: anisotropic_vdf(
            directional_bias: anisotropy
        ),
        absorption_coefficient: absorption_coefficient,
        scattering_coefficient: scattering_coefficient
    )
);
