mdl 1.2;

using df import *;
using state import *;
using base import *;
using math import *;
using sss import *;

export material layered_material(
    color base_color = color(1),
    float opacity_mask = 0.0,
    float glossy_weight = 1.0,
    uniform float base_glossiness = 0.6,
    uniform float highlight_glossiness = 0.9,
    uniform float glossy_ior = 1.49,
    float3 base_bump = normal(),
    float3 base_normal = normal(),
    float3 displacement = float3(0.0),
    float cutout_opacity = 1.0,
    uniform bool thin_walled = false,
    uniform color absorption_coefficient = color(0.0),
    uniform color scattering_coefficient = color(0.0),
    uniform float anisotropy = 0.0,
    uniform float ior = 1.33
) = let {
    material base_material = thin_layer_sss(
        surface_color: base_color,
        absorption_coefficient: absorption_coefficient,
        scattering_coefficient: scattering_coefficient,
        anisotropy: anisotropy,
        ior: color(ior)
    );
    
    float glossiness = base_glossiness + (
        clamp(glossy_weight, 0.0, 1.0) * 
        (highlight_glossiness - base_glossiness)
    );
    
    bsdf surface_layer = custom_curve_layer(
        /* inverted Schlick's approximation */
        normal_reflectivity: 1.0 - normal_from_ior(glossy_ior),
        grazing_reflectivity: 0.0,
        base: simple_glossy_bsdf(
            roughness_u: gloss_to_rough(glossiness)
        ),
        layer: weighted_layer(
            weight: 1.0 - clamp(opacity_mask, 0.0, 1.0),
            layer: base_material.surface.scattering,
            base: diffuse_reflection_bsdf(
                tint: base_color
            ),
            normal: base_normal
        )
    );
} in material(
    thin_walled: thin_walled,
    ior: base_material.ior,
    surface: material_surface(
        scattering: surface_layer
    ),
    volume: base_material.volume,
    geometry: material_geometry(
        displacement: displacement,
        normal: base_bump,
        cutout_opacity: cutout_opacity
    )
);
